{"version":3,"sources":["webpack:///(webpack)/buildin/global.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///crypto (ignored)","webpack:///util (ignored)","webpack:///util (ignored)?166b"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n// Scatter imports\nimport ScatterJS from '@scatterjs/core';\nimport ScatterEOS from '@scatterjs/eosjs2';\nimport {JsonRpc, Api} from 'eosjs';\nimport ScatterLynx from 'scatterjs-plugin-lynx';\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <div style=\"text-align:center\">\n            <h1>\n                status: {{status}}!\n            </h1>\n            <div class=\"padding\" [hidden]=\"!account\">\n                <div><button (click)=\"logout()\">Logout</button></div>\n                <pre>{{account|json}}</pre>\n            </div>\n        </div>\n    `,\n    styles: [\"pre {text-align:left} .padding{padding: 20px;} \"]\n})\nexport class AppComponent {\n    title = 'lynx-angular-scatterjs';\n    status = \"wallet NOT detected\";\n    connected = false;\n    account = null;\n\n    constructor() {\n        this.init();\n    }\n\n    async init () {\n        ScatterJS.plugins( new ScatterEOS(), new ScatterLynx({Api, JsonRpc}) );\n\n        const network = ScatterJS.Network.fromJson({\n            blockchain:'eos',\n            chainId:'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',\n            host:'nodes.get-scatter.com',\n            port:443,\n            protocol:'https'\n        });\n        const rpc = new JsonRpc(network.fullhost());\n\n        ScatterJS.connect('YourAppName', {network}).then(connected => {\n            this.connected = connected;\n            if(!connected) return console.error('no scatter');\n            this.status = \"wallet detected\";\n\n            const eos = ScatterJS.eos(network, Api, {rpc});\n\n            ScatterJS.login().then(id => {\n                if(!id) return console.error('no identity');\n                const account = ScatterJS.account('eos');\n                this.status = \"Logged as \" + account.name;\n                this.account = account;\n            });\n        });\n    }\n\n\n    logout() {\n        console.log(\"ScatterJS.forgetIdentity()\");\n        ScatterJS.forgetIdentity();\n        this.status = \"wallet detected\";\n        this.account = null;\n    }    \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}